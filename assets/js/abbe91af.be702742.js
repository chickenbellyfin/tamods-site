"use strict";(self.webpackChunktamods_site=self.webpackChunktamods_site||[]).push([[4814],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return s}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=d(a),s=r,k=c["".concat(p,".").concat(s)]||c[s]||u[s]||l;return a?n.createElement(k,o(o({ref:t},m),{},{components:a})):n.createElement(k,o({ref:t},m))}));function s(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},7973:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return m},default:function(){return c}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],i={id:"doc_dev_api_datatypes",title:"Miscellaneous Data Types",sidebar_label:"Miscellaneous Data Types",sidebar_position:9},p=void 0,d={unversionedId:"developer/api/doc_dev_api_datatypes",id:"developer/api/doc_dev_api_datatypes",isDocsHomePage:!1,title:"Miscellaneous Data Types",description:"Vector2",source:"@site/docs/developer/api/doc_dev_api_datatypes.md",sourceDirName:"developer/api",slug:"/developer/api/doc_dev_api_datatypes",permalink:"/docs/developer/api/doc_dev_api_datatypes",editUrl:"https://github.com/mcoot/tamods-site/tree/master/docs/developer/api/doc_dev_api_datatypes.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{id:"doc_dev_api_datatypes",title:"Miscellaneous Data Types",sidebar_label:"Miscellaneous Data Types",sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Drawing",permalink:"/docs/developer/api/doc_dev_api_drawing"},next:{title:"Particle Systems",permalink:"/docs/developer/api/doc_dev_api_particlesystems"}},m=[{value:"Vector2",id:"vector2",children:[{value:"Example",id:"example",children:[],level:4}],level:2},{value:"Vector",id:"vector",children:[],level:2},{value:"Vector4",id:"vector4",children:[],level:2},{value:"DamageNumber Class",id:"damagenumber-class",children:[{value:"Properties",id:"properties",children:[],level:4}],level:2},{value:"DamageNumberArray class",id:"damagenumberarray-class",children:[{value:"Methods",id:"methods",children:[],level:4}],level:2},{value:"Object",id:"object",children:[{value:"Methods",id:"methods-1",children:[],level:4}],level:2},{value:"FloatArray",id:"floatarray",children:[{value:"Methods",id:"methods-2",children:[],level:4}],level:2}],u={toc:m};function c(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"vector2"},"Vector2"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Vector2")," represents a 2D vector, and has the constructor function ",(0,l.kt)("inlineCode",{parentName:"p"},"Vector2(x: float, y: float): Vector2"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"x")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"X component of the vector")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"y")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"Y component of the vector")))),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function addVector2s(vec1, vec2)\n    return Vector2(vec1.x + vec2.x, vec1.y + vec2.y)\nend\n\nv1 = Vector2(1.5, 2)\nv2 = Vector2(2, 3)\nv3 = addVector2s(v1, v2)\n")),(0,l.kt)("h2",{id:"vector"},"Vector"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Vector")," represents a 3D vector, and has the constructor function ",(0,l.kt)("inlineCode",{parentName:"p"},"Vector(x: float, y: float, z: float): Vector"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"x")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"X component of the vector")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"y")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"Y component of the vector")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"z")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"Z component of the vector")))),(0,l.kt)("h2",{id:"vector4"},"Vector4"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Vector4")," represents a 4D vector, and has the constructor function ",(0,l.kt)("inlineCode",{parentName:"p"},"Vector4(x: float, y: float, z: float, w: float): Vector4"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"x")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"X component of the vector")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"y")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"Y component of the vector")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"z")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"Z component of the vector")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"w")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"W component of the vector")))),(0,l.kt)("h2",{id:"damagenumber-class"},"DamageNumber Class"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumber")," represents a damage number. Has the constructor function ",(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumber(number: integer, persistTime: float, location: Vector4, isShield: boolean)")),(0,l.kt)("h4",{id:"properties"},"Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},"The number value of the damage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"time")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"The remaining time this damage number should persist for")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"location")),(0,l.kt)("td",{parentName:"tr",align:null},"Vector4"),(0,l.kt)("td",{parentName:"tr",align:null},"The world-space location of the damage number")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"color")),(0,l.kt)("td",{parentName:"tr",align:null},"Color"),(0,l.kt)("td",{parentName:"tr",align:null},"The current colour of the damage number")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"scale")),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"The current scale of the damage number (1.0 = normal)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"shieldDamage")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the damage number represents shield damage")))),(0,l.kt)("h2",{id:"damagenumberarray-class"},"DamageNumberArray class"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumberArray")," represents a C++ array of damage numbers. "),(0,l.kt)("h4",{id:"methods"},"Methods"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumberArray:add(item: DamageNumber)")),(0,l.kt)("p",null,"Adds an item to the array."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumberArray:remove(index: integer)")),(0,l.kt)("p",null,"Removes the item at the given index."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumberArray:clear()")),(0,l.kt)("p",null,"Clears all elements from the array."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumberArray:size(): integer")),(0,l.kt)("p",null,"Gets the number of elements in the array."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumberArray:get(index: integer): DamageNumber")),(0,l.kt)("p",null,"Gets the element at the given index."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DamageNumberArray:set(index: integer, item: DamageNumber)")),(0,l.kt)("p",null,"Sets the element at the given index."),(0,l.kt)("h2",{id:"object"},"Object"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Object")," represents a generic Unreal Engine object."),(0,l.kt)("h4",{id:"methods-1"},"Methods"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Object:getName(): string")),(0,l.kt)("p",null,"Gets the name of this object."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Object:getClassName(): string")),(0,l.kt)("p",null,"Gets the name of this object's class."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Object:getFullName(): string")),(0,l.kt)("p",null,"Gets the full Unreal name for this object."),(0,l.kt)("h2",{id:"floatarray"},"FloatArray"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FloatArray")," represents a C++ array of floating point numbers."),(0,l.kt)("h4",{id:"methods-2"},"Methods"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FloatArray:add(item: float)")),(0,l.kt)("p",null,"Adds an item to the array."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FloatArray:remove(index: integer)")),(0,l.kt)("p",null,"Removes the item at the given index."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FloatArray:clear()")),(0,l.kt)("p",null,"Clears all elements from the array."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FloatArray:size(): integer")),(0,l.kt)("p",null,"Gets the number of elements in the array."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FloatArray:get(index: integer): float")),(0,l.kt)("p",null,"Gets the element at the given index."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FloatArray:set(index: integer, item: float)")),(0,l.kt)("p",null,"Sets the element at the given index."))}c.isMDXComponent=!0}}]);