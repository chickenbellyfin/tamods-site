"use strict";(self.webpackChunktamods_site=self.webpackChunktamods_site||[]).push([[1897],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4547:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return p},toc:function(){return c},default:function(){return m}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],l={title:"TAMods v0.7 Available Now",authors:"mcoot"},s=void 0,u={permalink:"/blog/2018/07/15/tamods-0.7",editUrl:"https://github.com/mcoot/tamods-site/tree/master/blog/2018-07-15-tamods-0.7.md",source:"@site/blog/2018-07-15-tamods-0.7.md",title:"TAMods v0.7 Available Now",description:"A new major version of TAMods, version 0.7, has now been released and is available via the TribesLauncher application.",date:"2018-07-15T00:00:00.000Z",formattedDate:"July 15, 2018",tags:[],readingTime:2.895,truncated:!0,authors:[{name:"mcoot",title:"TAMods Developer",key:"mcoot"}],prevItem:{title:"TAMods v1.18 Available Now",permalink:"/blog/2019/02/25/tamods-1.18"}},p={authorsImageUrls:[void 0]},c=[{value:"Changes",id:"changes",children:[{value:"Weapon Model Customisation",id:"weapon-model-customisation",children:[],level:3},{value:"Stats Recording",id:"stats-recording",children:[],level:3},{value:"New HUDModules",id:"new-hudmodules",children:[],level:3},{value:"Developer Documentation",id:"developer-documentation",children:[],level:3},{value:"Minor API Improvements",id:"minor-api-improvements",children:[{value:"Convenience constants",id:"convenience-constants",children:[],level:4},{value:"New Functions",id:"new-functions",children:[],level:4}],level:3}],level:2}],d={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A new major version of TAMods, version 0.7, has now been released and is available via ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mcoot/TribesLauncher/releases"},"the TribesLauncher application"),"."),(0,i.kt)("p",null,"Read on for a list of major changes, read on!"),(0,i.kt)("h2",{id:"changes"},"Changes"),(0,i.kt)("h3",{id:"weapon-model-customisation"},"Weapon Model Customisation"),(0,i.kt)("p",null,"Do you miss the SAP20? Well, it's back - or its weapon model is, at least! You can now swap the first person weapon model of any weapon out for that of any other - including models of the weapons removed in the Out of the Blue update. This can be done via the external configuration tool, the Ubermenu or via the ",(0,i.kt)("inlineCode",{parentName:"p"},"setWeaponModel")," Lua function."),(0,i.kt)("p",null,"Note that this system isn't quite perfect yet. First, updating model swaps while the game is running often does not work correctly, requiring a relaunch to apply. Second, some weapon animations do not transition correctly, causing the model to be held or animated wrong; this is most noticeable when swapping weapons with others of very different kinds (e.g. a sniper rifle for a pistol). Finally, there are ",(0,i.kt)("em",{parentName:"p"},"very")," rare crashes associated with the weapon swapping subsystem, generally occurring when the game ends."),(0,i.kt)("h3",{id:"stats-recording"},"Stats Recording"),(0,i.kt)("p",null,"TAMods can now record game statistics and give you a summary at the end of a match. With the ",(0,i.kt)("inlineCode",{parentName:"p"},"recordStats")," option enabled, you will now see a printout of your player statistics for the match, including everything from your fastest grab speed to that all important K/D ratio."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"recordTeamStats")," option will also print out information about the whole game - the map, who won, and the names of the players on each time."),(0,i.kt)("p",null,"Both kinds of statistics can also optionally be logged out to a file (in your T:A config directory) by enabling the ",(0,i.kt)("inlineCode",{parentName:"p"},"saveStats")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"saveTeamStats")," options."),(0,i.kt)("h3",{id:"new-hudmodules"},"New HUDModules"),(0,i.kt)("p",null,"The following HUDModules have been added and are now available in the Ubermenu HUD Maker:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dodgeKillFeed")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dodgeScoreboard")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dodgeSpeedBar")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"indiIFF Healthbars")," - alternate healthbars which show the percentage health of players"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mcootKillNotifications")," - an alternate way of displaying player kills, more similar to that of other FPS games"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mcootRabbitScoreboard")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mcootSpeedbars")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mcootStats")," - an extension of the ",(0,i.kt)("inlineCode",{parentName:"li"},"sqStats")," module which shows information including your current kill streak count"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mcootVehicleHealthEnergy"))),(0,i.kt)("h3",{id:"developer-documentation"},"Developer Documentation"),(0,i.kt)("p",null,"A major change in this release is the comprehensive reference for the TAMods API on this website, accompanied by short tutorials for writing your first TAMods scripts."),(0,i.kt)("h3",{id:"minor-api-improvements"},"Minor API Improvements"),(0,i.kt)("p",null,"A number of new minor features have been added to the Lua API:"),(0,i.kt)("h4",{id:"convenience-constants"},"Convenience constants"),(0,i.kt)("p",null,"Constant values / enums used throughout the Lua API have been given named constants accessible under the ",(0,i.kt)("inlineCode",{parentName:"p"},"enums")," namespace. Enums have been added for the following kinds of values:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Team Number"),(0,i.kt)("li",{parentName:"ul"},"Equip Points"),(0,i.kt)("li",{parentName:"ul"},"Reticule Types"),(0,i.kt)("li",{parentName:"ul"},"Chat Channels"),(0,i.kt)("li",{parentName:"ul"},"Input Eventtypes"),(0,i.kt)("li",{parentName:"ul"},"Kill Types"),(0,i.kt)("li",{parentName:"ul"},"Text Alignments")),(0,i.kt)("h4",{id:"new-functions"},"New Functions"),(0,i.kt)("p",null,"The following functions have been added to the API:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getHud()")," - returns a reference to the HUD object, previously accessible only within certain events"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"drawUTTextScaled()")," - allows the drawing of text in Unreal Tournament fonts with bitmap scaling applied"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"player.isSkiing()")," - returns whether the player is currently skiing"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"vehicle.name()")," - Get the name of the vehicle the player is in"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"vehicle.seatName()")," - Get the name of the current seat of the vehicle the player is in"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"vehicle.seatIndex()")," - Get the index of the seat of the vehicle the player is in"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"vehicle.seatCount()")," - Get the number of seats in the vehicle the player is in")))}m.isMDXComponent=!0}}]);