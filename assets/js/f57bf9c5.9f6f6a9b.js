"use strict";(self.webpackChunktamods_site=self.webpackChunktamods_site||[]).push([[1712],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return g}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=d(a),g=r,k=s["".concat(p,".").concat(g)]||s[g]||u[g]||l;return a?n.createElement(k,i(i({ref:e},m),{},{components:a})):n.createElement(k,i({ref:e},m))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},5704:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return m},default:function(){return s}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={id:"doc_srv_api_properties_classes",title:"Game Balance - Classes",sidebar_label:"Classes",sidebar_position:4},p=void 0,d={unversionedId:"server/game-modification/doc_srv_api_properties_classes",id:"server/game-modification/doc_srv_api_properties_classes",isDocsHomePage:!1,title:"Game Balance - Classes",description:"Overview",source:"@site/docs/server/game-modification/doc_srv_api_properties_classes.md",sourceDirName:"server/game-modification",slug:"/server/game-modification/doc_srv_api_properties_classes",permalink:"/docs/server/game-modification/doc_srv_api_properties_classes",editUrl:"https://github.com/mcoot/tamods-site/tree/master/docs/server/game-modification/doc_srv_api_properties_classes.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"doc_srv_api_properties_classes",title:"Game Balance - Classes",sidebar_label:"Classes",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Items",permalink:"/docs/server/game-modification/doc_srv_api_properties_items"},next:{title:"Vehicles",permalink:"/docs/server/game-modification/doc_srv_api_properties_vehicles"}},m=[{value:"Overview",id:"overview",children:[{value:"Setting Class Properties",id:"setting-class-properties",children:[],level:3}],level:2},{value:"Base Stats",id:"base-stats",children:[],level:2},{value:"Movement and Skiing",id:"movement-and-skiing",children:[],level:2},{value:"Jetting and Air Control",id:"jetting-and-air-control",children:[],level:2},{value:"Collision",id:"collision",children:[],level:2}],u={toc:m};function s(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"Class Property Modification can be used to modify the balance properties inherent to player classes (i.e. Light, Medium, Heavy, or pre-OOTB classes like Pathfinder, Sentinel or Brute)."),(0,l.kt)("p",null,"All class modification functions and properties fall under the ",(0,l.kt)("inlineCode",{parentName:"p"},"Classes")," namespace. Properties fall under the ",(0,l.kt)("inlineCode",{parentName:"p"},"Classes.Properties")," namespace. So for instance, one could reference a property with ",(0,l.kt)("inlineCode",{parentName:"p"},"Classes.Properties.HealthPool"),"."),(0,l.kt)("h3",{id:"setting-class-properties"},"Setting Class Properties"),(0,l.kt)("p",null,"Getter and Setter functions for property values are provided."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Classes.setProperty(className: string, property: ItemProperty, value: T)")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"setProperty")," sets the value of the property ",(0,l.kt)("inlineCode",{parentName:"p"},"property")," for the class ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),". The type ",(0,l.kt)("inlineCode",{parentName:"p"},"T")," represents the type of the values of that property - depending on the property this may be a boolean, integer, float or string."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Classes.getProperty(className: string, property: ItemProperty): T")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"getProperty")," retrieves the value of the given property. The type ",(0,l.kt)("inlineCode",{parentName:"p"},"T")," is the type of values of that property."),(0,l.kt)("h2",{id:"base-stats"},"Base Stats"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Value Restrictions"),(0,l.kt)("th",{parentName:"tr",align:null},"Units"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Health Pool"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"> 0"),(0,l.kt)("td",{parentName:"tr",align:null},"Health"),(0,l.kt)("td",{parentName:"tr",align:null},"Health pool for this class")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Energy Pool"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"Energy"),(0,l.kt)("td",{parentName:"tr",align:null},"Energy pool for the class")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"EnergyRechargeRate"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"Energy / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Rate at which energy recovers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JetEnergyCost"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"Energy / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Energy per second needed to jet")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"InitialJetEnergyCost"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"Energy"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of energy used in initiating the jetpack")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RegenTime"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"S"),(0,l.kt)("td",{parentName:"tr",align:null},"Time before health regen starts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RegenRate"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"How fast to regenerate health while regen is ongoing")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"LowHealthThreshold"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Percentage of health at which low health UI effects play")))),(0,l.kt)("h2",{id:"movement-and-skiing"},"Movement and Skiing"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Value Restrictions"),(0,l.kt)("th",{parentName:"tr",align:null},"Units"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Mass"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Mass for players of this type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GroundSpeed"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Walking speed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MaxSkiingSpeed"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Max speed achievable via skiing")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MaxSkiControl"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"0 <= x <= 1"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Max proportion of turn control the player can have while skiing")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SkiControlPeakSpeed"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Speed at which the player has maximum turning control; the mean of the normal curve for turn control")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SkiControlVariance"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Variance of the normal / bell curve for turn control; larger values mean a broader speed range with high control")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SkiSlopeGravity"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Gravity applied to the player while skiing down a slope")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"VehicleSpeedInheritance"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"0 <= x <= 1"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Proportion of speed to inherit when jumping out of a vehicle; affected by the vehicle's exit speed cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MomentumDampeningEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Whether impulse from an explosive weapon is reduced when the player is moving fast enough")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MomentumDampeningThreshold"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Speed threshold past which momentum dampening is active")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MomentumDampeningProportion"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"0 <= x <= 1"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Proportional reduction in impulse when momentum is dampened")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MaxHealthRegenSpeed"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0 (disabled if -1)"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Speed threshold above which health regen is disabled")))),(0,l.kt)("h2",{id:"jetting-and-air-control"},"Jetting and Air Control"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Value Restrictions"),(0,l.kt)("th",{parentName:"tr",align:null},"Units"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MaxJettingSpeed"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Max speed achievable via jetting")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JetAcceleration"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S^2"),(0,l.kt)("td",{parentName:"tr",align:null},"Acceleration caused by jetting")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"InitialJetAccelerationMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplier to acceleration for an initial jetpack boost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"InitialJetLength"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"S"),(0,l.kt)("td",{parentName:"tr",align:null},"How long the initial jetpack boost lasts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ForwardJetProportion"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"0 <= x <= 1"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Proportion of jetting acceleration applied to forwards momentum")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JetBoostMaxGroundSpeed"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum ground speed achievable via jetting while skiing")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DefaultAirControl"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"0 <= x <= 1"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Base proportion of turn / strafe control the player has in the air")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AirControlMaxMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplier applied to air control at speeds below the reduction range")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AirControlMinMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplier applied to air control at speeds above the reduction range")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AirControlReductionRangeMax"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Speed at which air control begins to decrease")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AirControlReductionRangeMin"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU / S"),(0,l.kt)("td",{parentName:"tr",align:null},"Speed at which air control stops decreasing")))),(0,l.kt)("p",null,"Air control works in a similar way to damage falloff: there is a 'reduction range' of speeds between ",(0,l.kt)("inlineCode",{parentName:"p"},"AirControlReductionRangeMax")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"AirControlReductionRangeMin"),", between which the multiplier applied to air control will drop off linearly."),(0,l.kt)("h2",{id:"collision"},"Collision"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Value Restrictions"),(0,l.kt)("th",{parentName:"tr",align:null},"Units"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"CollisionCylinderRadius"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU"),(0,l.kt)("td",{parentName:"tr",align:null},"Radius of the class's collision cylinder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"CollisionCylinderHeight"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},">= 0"),(0,l.kt)("td",{parentName:"tr",align:null},"UU"),(0,l.kt)("td",{parentName:"tr",align:null},"Height of the class's collision cylinder")))))}s.isMDXComponent=!0}}]);