(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{126:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),p=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},m=function(e){var t=p(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,b=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),m=p(a),u=n,O=m["".concat(b,".").concat(u)]||m[u]||d[u]||l;return a?r.a.createElement(O,c(c({ref:t},i),{},{components:a})):r.a.createElement(O,c({ref:t},i))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,b=new Array(l);b[0]=u;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,b[1]=c;for(var i=2;i<l;i++)b[i]=a[i];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},76:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),l=(a(0),a(126)),b={id:"doc_dev_api_datatypes",title:"Miscellaneous Data Types",sidebar_label:"Miscellaneous Data Types"},c={unversionedId:"doc_dev_api_datatypes",id:"doc_dev_api_datatypes",isDocsHomePage:!1,title:"Miscellaneous Data Types",description:"Vector2",source:"@site/docs/doc_dev_api_datatypes.md",slug:"/doc_dev_api_datatypes",permalink:"https://www.tamods.org/docs/doc_dev_api_datatypes",editUrl:"https://github.com/mcoot/taserver/edit/master/website/docs/doc_dev_api_datatypes.md",version:"current",sidebar_label:"Miscellaneous Data Types",sidebar:"developer",previous:{title:"Drawing",permalink:"https://www.tamods.org/docs/doc_dev_api_drawing"},next:{title:"Particle Systems",permalink:"https://www.tamods.org/docs/doc_dev_api_particlesystems"}},o=[{value:"Vector2",id:"vector2",children:[]},{value:"Vector",id:"vector",children:[]},{value:"Vector4",id:"vector4",children:[]},{value:"DamageNumber Class",id:"damagenumber-class",children:[]},{value:"DamageNumberArray class",id:"damagenumberarray-class",children:[]},{value:"Object",id:"object",children:[]},{value:"FloatArray",id:"floatarray",children:[]}],i={toc:o};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"vector2"},"Vector2"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Vector2")," represents a 2D vector, and has the constructor function ",Object(l.b)("inlineCode",{parentName:"p"},"Vector2(x: float, y: float): Vector2"),"."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Property"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"x")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"X component of the vector")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"y")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"Y component of the vector")))),Object(l.b)("h4",{id:"example"},"Example"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-lua"},"function addVector2s(vec1, vec2)\n    return Vector2(vec1.x + vec2.x, vec1.y + vec2.y)\nend\n\nv1 = Vector2(1.5, 2)\nv2 = Vector2(2, 3)\nv3 = addVector2s(v1, v2)\n")),Object(l.b)("h2",{id:"vector"},"Vector"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Vector")," represents a 3D vector, and has the constructor function ",Object(l.b)("inlineCode",{parentName:"p"},"Vector(x: float, y: float, z: float): Vector"),"."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Property"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"x")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"X component of the vector")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"y")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"Y component of the vector")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"z")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"Z component of the vector")))),Object(l.b)("h2",{id:"vector4"},"Vector4"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Vector4")," represents a 4D vector, and has the constructor function ",Object(l.b)("inlineCode",{parentName:"p"},"Vector4(x: float, y: float, z: float, w: float): Vector4"),"."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Property"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"x")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"X component of the vector")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"y")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"Y component of the vector")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"z")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"Z component of the vector")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"w")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"W component of the vector")))),Object(l.b)("h2",{id:"damagenumber-class"},"DamageNumber Class"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"DamageNumber")," represents a damage number. Has the constructor function ",Object(l.b)("inlineCode",{parentName:"p"},"DamageNumber(number: integer, persistTime: float, location: Vector4, isShield: boolean)")),Object(l.b)("h4",{id:"properties"},"Properties"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Property"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"number")),Object(l.b)("td",{parentName:"tr",align:null},"integer"),Object(l.b)("td",{parentName:"tr",align:null},"The number value of the damage")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"time")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"The remaining time this damage number should persist for")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"location")),Object(l.b)("td",{parentName:"tr",align:null},"Vector4"),Object(l.b)("td",{parentName:"tr",align:null},"The world-space location of the damage number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"color")),Object(l.b)("td",{parentName:"tr",align:null},"Color"),Object(l.b)("td",{parentName:"tr",align:null},"The current colour of the damage number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"scale")),Object(l.b)("td",{parentName:"tr",align:null},"float"),Object(l.b)("td",{parentName:"tr",align:null},"The current scale of the damage number (1.0 = normal)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"shieldDamage")),Object(l.b)("td",{parentName:"tr",align:null},"boolean"),Object(l.b)("td",{parentName:"tr",align:null},"Whether the damage number represents shield damage")))),Object(l.b)("h2",{id:"damagenumberarray-class"},"DamageNumberArray class"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"DamageNumberArray")," represents a C++ array of damage numbers. "),Object(l.b)("h4",{id:"methods"},"Methods"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"DamageNumberArray:add(item: DamageNumber)")),Object(l.b)("p",null,"Adds an item to the array."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"DamageNumberArray:remove(index: integer)")),Object(l.b)("p",null,"Removes the item at the given index."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"DamageNumberArray:clear()")),Object(l.b)("p",null,"Clears all elements from the array."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"DamageNumberArray:size(): integer")),Object(l.b)("p",null,"Gets the number of elements in the array."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"DamageNumberArray:get(index: integer): DamageNumber")),Object(l.b)("p",null,"Gets the element at the given index."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"DamageNumberArray:set(index: integer, item: DamageNumber)")),Object(l.b)("p",null,"Sets the element at the given index."),Object(l.b)("h2",{id:"object"},"Object"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Object")," represents a generic Unreal Engine object."),Object(l.b)("h4",{id:"methods-1"},"Methods"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Object:getName(): string")),Object(l.b)("p",null,"Gets the name of this object."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Object:getClassName(): string")),Object(l.b)("p",null,"Gets the name of this object's class."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Object:getFullName(): string")),Object(l.b)("p",null,"Gets the full Unreal name for this object."),Object(l.b)("h2",{id:"floatarray"},"FloatArray"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"FloatArray")," represents a C++ array of floating point numbers."),Object(l.b)("h4",{id:"methods-2"},"Methods"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"FloatArray:add(item: float)")),Object(l.b)("p",null,"Adds an item to the array."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"FloatArray:remove(index: integer)")),Object(l.b)("p",null,"Removes the item at the given index."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"FloatArray:clear()")),Object(l.b)("p",null,"Clears all elements from the array."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"FloatArray:size(): integer")),Object(l.b)("p",null,"Gets the number of elements in the array."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"FloatArray:get(index: integer): float")),Object(l.b)("p",null,"Gets the element at the given index."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"FloatArray:set(index: integer, item: float)")),Object(l.b)("p",null,"Sets the element at the given index."))}p.isMDXComponent=!0}}]);