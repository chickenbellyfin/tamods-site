(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{126:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return O}));var n=a(0),l=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=l.a.createContext({}),d=function(e){var t=l.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return l.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},u=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,b=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),m=d(a),u=n,O=m["".concat(b,".").concat(u)]||m[u]||p[u]||r;return a?l.a.createElement(O,i(i({ref:t},o),{},{components:a})):l.a.createElement(O,i({ref:t},o))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,b=new Array(r);b[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,b[1]=i;for(var o=2;o<r;o++)b[o]=a[o];return l.a.createElement.apply(null,b)}return l.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},87:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return d}));var n=a(3),l=a(7),r=(a(0),a(126)),b={id:"doc_dev_api_ux",title:"User Experience Features",sidebar_label:"User Experience Features"},i={unversionedId:"doc_dev_api_ux",id:"doc_dev_api_ux",isDocsHomePage:!1,title:"User Experience Features",description:"This page catalogues the miscellanious UI and User Experience settings TAMods provides.",source:"@site/docs/doc_dev_api_ux.md",slug:"/doc_dev_api_ux",permalink:"https://www.tamods.org/docs/doc_dev_api_ux",editUrl:"https://github.com/mcoot/taserver/edit/master/website/docs/doc_dev_api_ux.md",version:"current",sidebar_label:"User Experience Features",sidebar:"developer",previous:{title:"Game Information",permalink:"https://www.tamods.org/docs/doc_dev_api_gameinfo"},next:{title:"Model and Projectile Modification",permalink:"https://www.tamods.org/docs/doc_dev_api_model_proj"}},c=[{value:"UI Customisation",id:"ui-customisation",children:[{value:"Damage Numbers",id:"damage-numbers",children:[]},{value:"Gameplay and Graphics",id:"gameplay-and-graphics",children:[]},{value:"Hud Colours",id:"hud-colours",children:[]},{value:"UI Display",id:"ui-display",children:[]},{value:"MagicChain",id:"magicchain",children:[]}]},{value:"Roam Map",id:"roam-map",children:[]},{value:"Statistics",id:"statistics",children:[]},{value:"Chat",id:"chat",children:[]},{value:"Global Player Mute",id:"global-player-mute",children:[]},{value:"Sound Customisation",id:"sound-customisation",children:[{value:"Sound Replacement and Volume Adjustment",id:"sound-replacement-and-volume-adjustment",children:[]}]}],o={toc:c};function d(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This page catalogues the miscellanious UI and User Experience settings TAMods provides."),Object(r.b)("h2",{id:"ui-customisation"},"UI Customisation"),Object(r.b)("h3",{id:"damage-numbers"},"Damage Numbers"),Object(r.b)("p",null,"The variables below provide simple damage number customisation; more complex modification can be achieved with the ",Object(r.b)("a",{parentName:"p",href:"https://www.tamods.org/docs/doc_dev_api_events#ondamagenumbercreate"},"damage number events"),"."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"damageNumbersLimit")),Object(r.b)("td",{parentName:"tr",align:null},"integer"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"0")),Object(r.b)("td",{parentName:"tr",align:null},"Hides damage numbers below this amount of damage")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"damageNumbersOffsetX")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"0.0")),Object(r.b)("td",{parentName:"tr",align:null},"X offset to apply to damage numbers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"damageNumbersOffsetY")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"0.0")),Object(r.b)("td",{parentName:"tr",align:null},"Y offset to apply to damage numbers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"damageNumbersScale")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"1.0")),Object(r.b)("td",{parentName:"tr",align:null},"Scaling factor to apply to damage numbers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"revertOriginalDamageNumbers")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"Use GOTY (pre-OOTB) damage number positioning")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"revertOriginalDamageNumbersThreshold")),Object(r.b)("td",{parentName:"tr",align:null},"integer"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"150")),Object(r.b)("td",{parentName:"tr",align:null},"If the above is ",Object(r.b)("inlineCode",{parentName:"td"},"true"),", use GOTY positioning below this amount")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showDamageNumberStream")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"Show total damage done rather than damage per shot")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showChainBulletHitCount")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"Show the hit count rather than damage per shot")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"damageNumberStreamTimeout")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"0.5")),Object(r.b)("td",{parentName:"tr",align:null},"Reset the damage/hit stream count after not landing a hit for this many seconds")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"damageNumberCustomText")),Object(r.b)("td",{parentName:"tr",align:null},"string"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},'""')),Object(r.b)("td",{parentName:"tr",align:null},"Show custom text instead of damage numbers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showRainbow")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"Rainbow damage numbers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"damageNumbersColorMin")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(255, 255, 255)")),Object(r.b)("td",{parentName:"tr",align:null},"The initial colour of the damage number")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"damageNumbersColorMax")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(248, 83, 83)")),Object(r.b)("td",{parentName:"tr",align:null},"The final colour of the damage number")))),Object(r.b)("h3",{id:"gameplay-and-graphics"},"Gameplay and Graphics"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showWeapon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show the weapon model")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showBodyMesh")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show the player body mesh")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"useFOVScaling")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to scale sensitivity with FOV; disabling may improve precision with whole number sensitivity")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"sens")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"10.0"),Object(r.b)("td",{parentName:"tr",align:null},"Mouse sensitivity for when FOV scaling is disabled")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"sensZoom")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"5.0"),Object(r.b)("td",{parentName:"tr",align:null},"First zoom level sensitivity for when FOV scaling is disabled")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"sensZoooom")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"2.0"),Object(r.b)("td",{parentName:"tr",align:null},"Second zoom level sensitivity for when FOV scaling is disabled")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"customWeaponOffset")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to offset the position of the weapon model")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"weaponOffset")),Object(r.b)("td",{parentName:"tr",align:null},"Vector"),Object(r.b)("td",{parentName:"tr",align:null},"Vector(0.0,0.0,0.0)"),Object(r.b)("td",{parentName:"tr",align:null},"The weapon model offset to use")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"sensitivity(sens: float)")),Object(r.b)("p",null,"Modify in-game sensitivity (either FOV-scaled or not) to the given value."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"gamma(gamma: float)")),Object(r.b)("p",null,"Set the in-game graphics gamma to the given value."),Object(r.b)("h3",{id:"hud-colours"},"Hud Colours"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"friendlyChatColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(158,208,212)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for friendly console messages")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"enemyChatColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(255,111,111)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for enemy console messages")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"whisperChatColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(207,165,101)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for private messages")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"friendlyHUDChatColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(158,208,211)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for friendly HUD chat messages")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"enemyHUDChatColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(249,32,32)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for enemy HUD chat messages")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"friendlyColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(119,186,255)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for friendly UI elements")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"enemyColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(248,83,83)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for enemy UI elements")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"friendlyMarkerColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(115,225,255)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for friendly player IFF markers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"enemyMarkerColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(255,23,23)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for enemy player IFF markers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"friendlyIsFMarkerColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(81,250,85)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for friended, friendly player IFF markers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"enemyIsFMarkerColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(239,164,0)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour for friended, enemy player IFF markers")))),Object(r.b)("h3",{id:"ui-display"},"UI Display"),Object(r.b)("h4",{id:"crosshairs"},"Crosshairs"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showCrosshair")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"true")),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show default crosshairs (disabling this does not disable hitmarkers!)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showLaserCrosshair")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"When ",Object(r.b)("inlineCode",{parentName:"td"},"showCrosshair")," is false, whether the laser targeter crosshair should still be shown (so that e.g. call-in progress appears)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"crosshairScale")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"1.0")),Object(r.b)("td",{parentName:"tr",align:null},"Scaling factor to apply to crosshairs")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"crosshairColor")),Object(r.b)("td",{parentName:"tr",align:null},"Color"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(255,255,255)")),Object(r.b)("td",{parentName:"tr",align:null},"Colour to apply to crosshairs")))),Object(r.b)("h4",{id:"icons"},"Icons"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showObjectiveIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show objective icons")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showObjectiveText")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show objective text")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showFlagBaseIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show the flag base icon")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showFlagHomeBaseIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show the flag base icon when the flag is home")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showCTFBaseIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show the base icon in CTF")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showNuggetIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show the nugget icon")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showPlayerIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show player icons")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showVehicleIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show the Vehicle Pad icon")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showMineIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show icons for mines")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showMineText")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show text for mines")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showSensorIcon")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to show sensor icons")))),Object(r.b)("h4",{id:"miscellaneous-ui"},"Miscellaneous UI"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"skiBarMin")),Object(r.b)("td",{parentName:"tr",align:null},"integer"),Object(r.b)("td",{parentName:"tr",align:null},"30"),Object(r.b)("td",{parentName:"tr",align:null},"Minimum value to display on the ski bars")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"skiBarMax")),Object(r.b)("td",{parentName:"tr",align:null},"integer"),Object(r.b)("td",{parentName:"tr",align:null},"300"),Object(r.b)("td",{parentName:"tr",align:null},"Maximum value to display on the ski bars")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"IFFScale")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"1.0"),Object(r.b)("td",{parentName:"tr",align:null},"Scale factor to apply to IFF markers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"showFirstPersonAmmo")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to always show the floating ammo counter even when disabled in-game")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"consoleSize")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"0.75"),Object(r.b)("td",{parentName:"tr",align:null},"The proportion of the screen the full console covers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"consoleTransparency")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"0.8"),Object(r.b)("td",{parentName:"tr",align:null},"The background transparency of the console")))),Object(r.b)("h3",{id:"magicchain"},"MagicChain"),Object(r.b)("p",null,"The MagicChain feature allows for user-adjustable latency compensation for automatic weapons."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"useMagicChain")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Enables MagicChain compensation")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"useSmallBullets")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to use smaller chain tracers (a.k.a. 'simulated projectiles off')")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"centerBulletSpawn")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Spawn bullet tracers in the centre of the screen")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"bulletPingMultiplier")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"1.0"),Object(r.b)("td",{parentName:"tr",align:null},"Latency compensation multiplier (2x will compensate for twice your ping etc.)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"bulletSpawnDelay")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"0.0"),Object(r.b)("td",{parentName:"tr",align:null},"Delay before spawning bullet tracers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"customBulletSpawnOffset")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether use a custom spawn offset for bullet tracers")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"bulletSpawnOffset")),Object(r.b)("td",{parentName:"tr",align:null},"Vector"),Object(r.b)("td",{parentName:"tr",align:null},"Vector(180.0, 0.0, 0.0)"),Object(r.b)("td",{parentName:"tr",align:null},"The custom spawn offset to use for bullet tracers")))),Object(r.b)("h2",{id:"roam-map"},"Roam Map"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"disableBaseTurrets")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to turn off base turrets in roam map")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"disablePower")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to disable gen power in roam map")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"maxSpeedWithFlag")),Object(r.b)("td",{parentName:"tr",align:null},"integer"),Object(r.b)("td",{parentName:"tr",align:null},"0"),Object(r.b)("td",{parentName:"tr",align:null},"The flag drag speed cap in roam map (0 = no flag drag)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"decelerationRateWithFlag")),Object(r.b)("td",{parentName:"tr",align:null},"integer"),Object(r.b)("td",{parentName:"tr",align:null},"10"),Object(r.b)("td",{parentName:"tr",align:null},"The deceleration to use with flag drag in roam map")))),Object(r.b)("p",null,"In addition, the following functions correspond to console commands, and are available via the API to allow for keybinds."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"toggleTurrets()")),Object(r.b)("p",null,"Toggles roam map base turrets on / off."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"togglePower()")),Object(r.b)("p",null,"Toggles roam map base power on / off."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"returnFlags()")),Object(r.b)("p",null,"Returns both flags in roam map."),Object(r.b)("h2",{id:"statistics"},"Statistics"),Object(r.b)("p",null,"TAMods can display and save player and team statistics at the end of a match."),Object(r.b)("p",null,"The team statistics in particular are useful for recording game results (this feature has been used to log results of Australian pickup games for analysis)."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"recordStats")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to enable individual statistics")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"recordTeamStats")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"If ",Object(r.b)("inlineCode",{parentName:"td"},"recordStats")," is enabled, also save team stats")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"saveStats")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to save individual statistics to file")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"saveTeamStats")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to save team statistics to file")))),Object(r.b)("p",null,"Statistics files are saved in comma-separated value (CSV) format to the configuration directory; stats for multiple matches will be appended to the same file."),Object(r.b)("h2",{id:"chat"},"Chat"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"say(message: string)")),Object(r.b)("p",null,"Say the given message in global game chat."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"teamsay(message: string)")),Object(r.b)("p",null,"Say the message in team chat."),Object(r.b)("h2",{id:"global-player-mute"},"Global Player Mute"),Object(r.b)("p",null,"The global player mute allows you to mute chat and direct messages from a player, persisting between game restarts (unlike the in-game mechanism). It is also customisable - you can mute only VGS commands from a given player, for instance."),Object(r.b)("h4",{id:"mutedplayer-data-type"},"MutedPlayer Data Type"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"MutedPlayer")," datatype has the following properties"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Property"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"username")),Object(r.b)("td",{parentName:"tr",align:null},"string"),Object(r.b)("td",{parentName:"tr",align:null},"The user to mute")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"muteVGS")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to mute VGS from this user")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"muteText")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to mute text chat from this user")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"muteDirectMessage")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to mute direct message from this user")))),Object(r.b)("h4",{id:"associated-functions"},"Associated Functions"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"mplayer(username: string): MutedPlayer")),Object(r.b)("p",null,"Create a ",Object(r.b)("inlineCode",{parentName:"p"},"MutedPlayer")," object with all options muted. This does not actually ",Object(r.b)("em",{parentName:"p"},"mute")," the player, it merely creates the object."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"mplayer_custom(username: string, muteVGS: boolean, muteText: boolean, muteDirectMessage: boolean)")),Object(r.b)("p",null,"Create a ",Object(r.b)("inlineCode",{parentName:"p"},"MutedPlayer")," object with the given muting options. This does not actually ",Object(r.b)("em",{parentName:"p"},"mute")," the player, it merely creates the object."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"mutePlayer(player: MutedPlayer)")),Object(r.b)("p",null,"Mute a player with the settings defined by the given ",Object(r.b)("inlineCode",{parentName:"p"},"MutedPlayer"),"."),Object(r.b)("h2",{id:"sound-customisation"},"Sound Customisation"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Variable"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"muteVGS")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Whether to mute all VGS sounds")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"hitSoundMode")),Object(r.b)("td",{parentName:"tr",align:null},"integer"),Object(r.b)("td",{parentName:"tr",align:null},"1"),Object(r.b)("td",{parentName:"tr",align:null},"What kind of hit sound pitch adjustment to use (1 = normal, 2 = pitch decrease with damage, 3 = pitch increase with damage)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"hitSoundPitchMin")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"0.4"),Object(r.b)("td",{parentName:"tr",align:null},"Minimum pitch hit sounds can be played at")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"hitSoundPitchMax")),Object(r.b)("td",{parentName:"tr",align:null},"float"),Object(r.b)("td",{parentName:"tr",align:null},"1.6"),Object(r.b)("td",{parentName:"tr",align:null},"Maximum pitch hit sounds can be played at")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"hitSoundDamageRef")),Object(r.b)("td",{parentName:"tr",align:null},"integer"),Object(r.b)("td",{parentName:"tr",align:null},"600"),Object(r.b)("td",{parentName:"tr",align:null},"Damage number to use as the reference for dynamic pitch hit sounds (i.e. at this amount of damage, the pitch will be 1.0)")))),Object(r.b)("h3",{id:"sound-replacement-and-volume-adjustment"},"Sound Replacement and Volume Adjustment"),Object(r.b)("h4",{id:"adjusting-default-sounds"},"Adjusting Default Sounds"),Object(r.b)("p",null,"You can adjust the volume and pitch of any sound in the game by searching their names."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"modifySound(name: string, pitch: float, volume: float)")),Object(r.b)("p",null,"Modify the sound with the exact given name, adjusting its pitch and volume by the multiplicative factors given."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"modifySoundRe(regex: string, pitch: float, volume: float)")),Object(r.b)("p",null,"Modify sounds matching the given regex pattern, adjusting pitch and volume."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"searchSoundRe(regex: string)")),Object(r.b)("p",null,"Search for sounds matching the regex, printing results to the console."),Object(r.b)("h4",{id:"replacing-in-game-sounds"},"Replacing In-Game Sounds"),Object(r.b)("p",null,"Certain in-game sounds can be replaced with a custom sound by setting the variable with the form ",Object(r.b)("inlineCode",{parentName:"p"},"sound<SoundName>")," (e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"soundBluePlate"),") to be the file path to the desired sound. ",Object(r.b)("em",{parentName:"p"},"File paths should be relative to the config directory"),"."),Object(r.b)("p",null,"Custom sounds can be volume-adjusted by setting the variable with the form ",Object(r.b)("inlineCode",{parentName:"p"},"volume<SoundName>")," (e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"volumeBluePlate"),") to be the desired ",Object(r.b)("inlineCode",{parentName:"p"},"float")," volume level"),Object(r.b)("p",null,"The following sounds are available for modification:"),Object(r.b)("h4",{id:"hits-and-kills"},"Hits and Kills"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Hit")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Headshot")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Kill")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"AirMail")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"BluePlate")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FirstBlood")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"HeadShotKill")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"ArtilleryShot")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"MeleeKill")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"RoadKill"))),Object(r.b)("h4",{id:"sprees-and-multi-kills"},"Sprees and Multi-kills"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Streak1")," (Killing Spree)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Streak2")," (Rampage)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Streak3")," (Relentless)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Streak4")," (Unstoppable)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Streak5")," (The Slayer)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"MultiKill1")," (Double Kill)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"MultiKill2")," (Triple Kill)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"MultiKill3")," (Quatra Kill)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"MultiKill4")," (Ultra Kill)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"MultiKill5")," (Team Kill)")),Object(r.b)("h4",{id:"flag-events"},"Flag Events"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FastGrab")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagBlueGrab")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagRedGrab")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagBluePickup")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagRedPickup")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagBlueCapture")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagRedCapture")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagBlueReturn")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagRedReturn")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagBlueDrop")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FlagRedDrop"))))}d.isMDXComponent=!0}}]);