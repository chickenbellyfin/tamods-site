"use strict";(self.webpackChunktamods_site=self.webpackChunktamods_site||[]).push([[397],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return g}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),d=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=d(t.components);return n.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),u=d(a),g=r,k=u["".concat(o,".").concat(g)]||u[g]||m[g]||l;return a?n.createElement(k,i(i({ref:e},s),{},{components:a})):n.createElement(k,i({ref:e},s))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2025:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],p={id:"doc_srv_api_serverconfig",title:"Server Settings",sidebar_label:"Server Settings",sidebar_position:1},o=void 0,d={unversionedId:"server/server-setup/doc_srv_api_serverconfig",id:"server/server-setup/doc_srv_api_serverconfig",isDocsHomePage:!1,title:"Server Settings",description:"Server Settings",source:"@site/docs/server/server-setup/doc_srv_api_serverconfig.md",sourceDirName:"server/server-setup",slug:"/server/server-setup/doc_srv_api_serverconfig",permalink:"/docs/server/server-setup/doc_srv_api_serverconfig",editUrl:"https://github.com/mcoot/tamods-site/tree/master/docs/server/server-setup/doc_srv_api_serverconfig.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"doc_srv_api_serverconfig",title:"Server Settings",sidebar_label:"Server Settings",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"API Overview",permalink:"/docs/server/doc_srv_api_overview"},next:{title:"Server Administration",permalink:"/docs/server/server-setup/doc_srv_api_admin"}},s=[{value:"Server Settings",id:"server-settings",children:[{value:"Enums",id:"enums",children:[{value:"TeamAssignTypes",id:"teamassigntypes",children:[],level:4}],level:3},{value:"Options",id:"options",children:[{value:"Timing",id:"timing",children:[],level:4},{value:"Team Options",id:"team-options",children:[],level:4},{value:"Scoring Options",id:"scoring-options",children:[],level:4},{value:"Friendly Fire",id:"friendly-fire",children:[],level:4},{value:"Vehicles",id:"vehicles",children:[],level:4},{value:"Base",id:"base",children:[],level:4},{value:"Call-In Options",id:"call-in-options",children:[{value:"Call-In Placement Tweaks",id:"call-in-placement-tweaks",children:[],level:5}],level:4},{value:"Gameplay Customisation",id:"gameplay-customisation",children:[],level:4},{value:"Flag Drag",id:"flag-drag",children:[],level:4}],level:3}],level:2},{value:"Map Rotation",id:"map-rotation",children:[{value:"Rotation Mode",id:"rotation-mode",children:[],level:3},{value:"Setting the Rotation",id:"setting-the-rotation",children:[],level:3},{value:"Maps",id:"maps",children:[{value:"Full Map List",id:"full-map-list",children:[],level:4}],level:3}],level:2}],m={toc:s};function u(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"server-settings"},"Server Settings"),(0,l.kt)("h3",{id:"enums"},"Enums"),(0,l.kt)("h4",{id:"teamassigntypes"},"TeamAssignTypes"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"TeamAssignTypes")," enum represents the possible approaches to team assignment. It has the values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Balanced")," - players are restricted to join teams so that each team has a balanced number of players"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Unbalanced")," - players are free to join either team irrespective of numbers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AutoAssign")," - players are automatically assigned to teams")),(0,l.kt)("h3",{id:"options"},"Options"),(0,l.kt)("h4",{id:"timing"},"Timing"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.TimeLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"25"),(0,l.kt)("td",{parentName:"tr",align:null},"Game time limit in minutes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.OvertimeLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"Length of overtime in minutes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.WarmupTime"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"Length of warmup time in seconds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.RespawnTime"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"Respawn time in seconds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.SniperRespawnDelay"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Additional respawn time incurred when the player has a sniper rifle")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.AmmoPickupLifespan"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"15"),(0,l.kt)("td",{parentName:"tr",align:null},"Time in seconds that ammo pickups dropped by dead players last")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.CTFFlagTimeout"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"40"),(0,l.kt)("td",{parentName:"tr",align:null},"Time in seconds before a dropped flag will return to base")))),(0,l.kt)("h4",{id:"team-options"},"Team Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.MaxPlayers"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum server player count")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.TeamAssignType"),(0,l.kt)("td",{parentName:"tr",align:null},"TeamAssignType"),(0,l.kt)("td",{parentName:"tr",align:null},"TeamAssignTypes.Balanced"),(0,l.kt)("td",{parentName:"tr",align:null},"How players should be assigned to teams")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.NakedSpawn"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether players should spawn naked (as lights without their loadout)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.AutoBalanceTeams"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to auto-balance teams in-game")))),(0,l.kt)("h4",{id:"scoring-options"},"Scoring Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.CTFCapLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"Caps to win in CTF")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.TDMKillLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"Kills to win in TDM")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.ArenaRounds"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of rounds in Arena")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.ArenaLives"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"25"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of lives per round in Arena")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.RabbitScoreLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"Score to win in Rabbit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.CaHScoreLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"50"),(0,l.kt)("td",{parentName:"tr",align:null},"Score to win in Capture and Hold")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.CTFBlitzAllFlagsMove"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether both teams' flags move after a cap in Blitz")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.TeamCredits"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether player credits form a shared team pool")))),(0,l.kt)("h4",{id:"friendly-fire"},"Friendly Fire"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.FriendlyFire"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether friendly fire is enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.FriendlyFireMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplier for friendly fire damage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.FriendlyFireDamageKickLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of friendly damage done before a player is kicked (0 for no limit)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.FriendlyFireKillKickLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of friendly players killed before kick (0 for no limit)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.BaseDestructionKickLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of damage to the friendly base done before kick (0 for no limit)")))),(0,l.kt)("h4",{id:"vehicles"},"Vehicles"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.VehicleHealthMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplier affecting all vehicles' health")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.GravCycleLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of Grav Cycles allowed per team")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.ShrikeLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of Shrikes allowed per team")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.BeowulfLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of Beowulfs allowed per team")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.VehiclesEarnedWithCredits"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"If true, vehicles are earned via credits (GOTY); if false, they spawn over time (OOTB)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.GravCycleCost"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"500"),(0,l.kt)("td",{parentName:"tr",align:null},"Credit cost for a Grav Cycle (GOTY)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.ShrikeCost"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"4000"),(0,l.kt)("td",{parentName:"tr",align:null},"Credit cost for a Shrike (GOTY)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.BeowulfCost"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"2500"),(0,l.kt)("td",{parentName:"tr",align:null},"Credit cost for a Beowulf (GOTY)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.GravCycleSpawnTime"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"Generation time for Grav Cycles in seconds (OOTB)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.ShrikeSpawnTime"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"120"),(0,l.kt)("td",{parentName:"tr",align:null},"Generation time for Shrikes in seconds (OOTB)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.BeowulfSpawnTime"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"120"),(0,l.kt)("td",{parentName:"tr",align:null},"Generation time for Beowulfs in seconds (OOTB)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.GravCycleEjectionSeat"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether Grav Cycles eject drivers on death")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.BeowulfEjectionSeat"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether Beowulfs eject pilots on death")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.ShrikeEjectionSeat"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether Shrikes eject pilots on death")))),(0,l.kt)("h4",{id:"base"},"Base"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.BaseAssets"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether turrets and sensors are enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.BaseUpgrades"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether base upgrades are enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.PoweredDeployables"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether deployables (e.g. turrets) require generator power")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.GeneratorRegen"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the generator regenerates automatically over time")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.GeneratorDestroyable"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the generator can be destroyed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.BaseAssetFriendlyFire"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether friendly fire applies to base assets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.DeployableFriendlyFire"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether friendly fire applies to deployables")))),(0,l.kt)("h4",{id:"call-in-options"},"Call-In Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.EnableInventoryCallIn"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether inventory station call-ins are enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryCallInCost"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Credits cost for an inventory call-in")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryCallInBuildUpTime"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Seconds it takes to call in an inventory station")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryCallInCooldownTime"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"Personal cooldown after calling in an inventory station before you can do so again")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryCallInBlocksPlayers"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"If false, players can pass through inventory stations without being blocked")))),(0,l.kt)("h5",{id:"call-in-placement-tweaks"},"Call-In Placement Tweaks"),(0,l.kt)("p",null,"These variables tweak the collision checking used to determine if an inv station can be called at a given location."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryCallInMapCollisionCheckExtent"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"The extent (distance) around the point used to check for terrain collisions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryCallInStationCollisionCheckExtent"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"700"),(0,l.kt)("td",{parentName:"tr",align:null},"The minimum distance in UU away another inv station may be when placing one")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryCallInTerrainMaxAngle"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"70"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximium terrain incline in degrees at which an inv station may be placed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryCallInMeshMaxAngle"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"40"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum mesh incline (e.g. a stand/base structure) in degrees at which an inv station may be placed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h4",{id:"gameplay-customisation"},"Gameplay Customisation"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.EnergyMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplier affecting the energy pools of all players")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.AoESizeMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplier affecting the size of all Area-of-Effect explosions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.AoEDamageMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplier affecting the damage done by Area-of-Effect explosions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.SkiingEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether skiing is enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.UseGOTYShieldPack"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"If true, shield pack effects are reverted to GOTY patch behaviour*")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.UseGOTYBXTCharging"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"If true, the BXT rifles work as in GOTY with respect to charging and unscoped damage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.InventoryStationsRestoreEnergy"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"If true, players will have energy restored when entering an inventory station")))),(0,l.kt)("p",null,"*"," With UseGOTYShieldPack on, taking damage which is absorbed by shields will not block regen, and the heavy shield pack will not reduce impulse received when active."),(0,l.kt)("h4",{id:"flag-drag"},"Flag Drag"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.FlagDragLight"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Speed at which flag-drag occurs for lights")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.FlagDragMedium"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Speed at which flag-drag occurs for mediums")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.FlagDragHeavy"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Speed at which flag-drag occurs for heavies")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ServerSettings.FlagDragDeceleration"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Deceleration rate for flag-drag")))),(0,l.kt)("h2",{id:"map-rotation"},"Map Rotation"),(0,l.kt)("h3",{id:"rotation-mode"},"Rotation Mode"),(0,l.kt)("p",null,"The map rotation is either ",(0,l.kt)("em",{parentName:"p"},"sequential")," (default), where each map is played in the order they are added to the rotation, or ",(0,l.kt)("em",{parentName:"p"},"random"),", where after each map a new map is selected at random from the rotation (this can be the same map)."),(0,l.kt)("p",null,"This can be controlled via the following variable:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ServerSettings.MapRotation.Mode")),(0,l.kt)("p",null,"This should have one of the following values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ServerSettings.MapRotation.Modes.Sequential")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ServerSettings.MapRotation.Modes.Random"))),(0,l.kt)("h3",{id:"setting-the-rotation"},"Setting the Rotation"),(0,l.kt)("p",null,"The rotation itself may be controlled via the below functions:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ServerSettings.MapRotation.add(map: Map)")),(0,l.kt)("p",null,"Adds a map to the rotation. The map should be a value from the ",(0,l.kt)("a",{parentName:"p",href:"#maps"},"Maps enum")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ServerSettings.MapRotation.addCustom(mapName: string)")),(0,l.kt)("p",null,"Adds a map to the rotation by filename (as located in the game's CookedPC/maps directory). Can be used to run a custom map."),(0,l.kt)("p",null,"An example of adding maps to the rotation is given below:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'ServerSettings.MapRotation.add(Maps.CTF.ArxNovena)\nServerSettings.MapRotation.add(Maps.TDM.DrydockNight)\nServerSettings.MapRotation.add(Maps.Arena.WalledIn)\nServerSettings.MapRotation.addCustom("TrCTF-Katabatic")\n')),(0,l.kt)("h3",{id:"maps"},"Maps"),(0,l.kt)("p",null,"The Maps enum gives values (i.e. map codes) for all non-custom maps existing in the game, under the following namespaces:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Maps.CTF")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Maps.TDM")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Maps.Arena")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Maps.Rabbit")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Maps.CaH")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Maps.Blitz"))),(0,l.kt)("h4",{id:"full-map-list"},"Full Map List"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"-------------- Capture the Flag --------------\nServerSettings.MapRotation.add(Maps.CTF.Katabatic)\nServerSettings.MapRotation.add(Maps.CTF.ArxNovena)\nServerSettings.MapRotation.add(Maps.CTF.DangerousCrossing)\nServerSettings.MapRotation.add(Maps.CTF.Crossfire)\nServerSettings.MapRotation.add(Maps.CTF.Drydock)\nServerSettings.MapRotation.add(Maps.CTF.Terminus)\nServerSettings.MapRotation.add(Maps.CTF.Sunstar)\nServerSettings.MapRotation.add(Maps.CTF.BellaOmega)\nServerSettings.MapRotation.add(Maps.CTF.BellaOmegaNS)\nServerSettings.MapRotation.add(Maps.CTF.Blueshift)\nServerSettings.MapRotation.add(Maps.CTF.CanyonCrusade)\nServerSettings.MapRotation.add(Maps.CTF.Hellfire)\nServerSettings.MapRotation.add(Maps.CTF.IceCoaster)\nServerSettings.MapRotation.add(Maps.CTF.Perdition)\nServerSettings.MapRotation.add(Maps.CTF.Permafrost)\nServerSettings.MapRotation.add(Maps.CTF.Raindance)\nServerSettings.MapRotation.add(Maps.CTF.Stonehenge)\nServerSettings.MapRotation.add(Maps.CTF.Tartarus)\nServerSettings.MapRotation.add(Maps.CTF.TempleRuins)\n\n-------------- Arena --------------\n\nServerSettings.MapRotation.add(Maps.Arena.WalledIn)\nServerSettings.MapRotation.add(Maps.Arena.Hinterland)\nServerSettings.MapRotation.add(Maps.Arena.FrayTown)\nServerSettings.MapRotation.add(Maps.Arena.Undercroft)\nServerSettings.MapRotation.add(Maps.Arena.AirArena)\nServerSettings.MapRotation.add(Maps.Arena.LavaArena)\nServerSettings.MapRotation.add(Maps.Arena.Whiteout)\n\n-------------- Rabbit --------------\n\nServerSettings.MapRotation.add(Maps.Rabbit.Nightabatic)\nServerSettings.MapRotation.add(Maps.Rabbit.SulfurCove)\nServerSettings.MapRotation.add(Maps.Rabbit.Inferno)\nServerSettings.MapRotation.add(Maps.Rabbit.Crossfire)\nServerSettings.MapRotation.add(Maps.Rabbit.Outskirts)\nServerSettings.MapRotation.add(Maps.Rabbit.Quicksand)\n\n-------------- Team Death Match --------------\nServerSettings.MapRotation.add(Maps.TDM.Outskirts)\nServerSettings.MapRotation.add(Maps.TDM.Quicksand)\nServerSettings.MapRotation.add(Maps.TDM.SulfurCove)\nServerSettings.MapRotation.add(Maps.TDM.DrydockNight)\nServerSettings.MapRotation.add(Maps.TDM.Nightabatic)\nServerSettings.MapRotation.add(Maps.TDM.Inferno)\nServerSettings.MapRotation.add(Maps.TDM.Miasma)\n\n-------------- CTF Blitz --------------\nServerSettings.MapRotation.add(Maps.Blitz.ArxNovena)\nServerSettings.MapRotation.add(Maps.Blitz.BellaOmega)\nServerSettings.MapRotation.add(Maps.Blitz.Blueshift)\nServerSettings.MapRotation.add(Maps.Blitz.Crossfire)\nServerSettings.MapRotation.add(Maps.Blitz.CanyonCrusadeRevival)\nServerSettings.MapRotation.add(Maps.Blitz.Drydock)\nServerSettings.MapRotation.add(Maps.Blitz.Hellfire)\nServerSettings.MapRotation.add(Maps.Blitz.IceCoaster)\nServerSettings.MapRotation.add(Maps.Blitz.Katabatic)\nServerSettings.MapRotation.add(Maps.Blitz.Perdition)\nServerSettings.MapRotation.add(Maps.Blitz.Terminus)\n\n-------------- Capture and Hold --------------\nServerSettings.MapRotation.add(Maps.CaH.Outskirts)\nServerSettings.MapRotation.add(Maps.CaH.Katabatic)\nServerSettings.MapRotation.add(Maps.CaH.Raindance)\nServerSettings.MapRotation.add(Maps.CaH.SulfurCove)\nServerSettings.MapRotation.add(Maps.CaH.Tartarus)\nServerSettings.MapRotation.add(Maps.CaH.CanyonCrusadeRevival)\n")),(0,l.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Player Made Maps need to be installed on both the ",(0,l.kt)("inlineCode",{parentName:"p"},"server")," and each players ",(0,l.kt)("inlineCode",{parentName:"p"},"client"),"!"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'-------------- Player Made Maps --------------\n-- Note: These need to be installed manually on the server prior to enabling.\nServerSettings.MapRotation.addCustom("TrCTF-Blues")\nServerSettings.MapRotation.addCustom("TrCTF-Incidamus")\nServerSettings.MapRotation.addCustom("TrCTF-Periculo")\n')))}u.isMDXComponent=!0}}]);